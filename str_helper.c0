#use <string>

bool chr_is_whitespace(char chr) {
    return chr == ' ' || chr == '\n' || chr == '\t';
}

bool chr_is_digit(char chr) {
    int ascii = char_ord(chr);
    return ascii >= 48 && ascii < 48 + 10;
}

bool chr_is_hex(char chr) {
    int ascii = char_ord(chr);
    return ascii >= 48 && ascii < 48 + 10
        || ascii >= 97 && ascii < 97 + 6
        || ascii >= 65 && ascii < 65 + 6;
}

bool chr_is_alpha(char chr) {
    int ascii = char_ord(chr);
    return ascii >= 97 && ascii < 97 + 26
        || ascii >= 65 && ascii < 65 + 26;
}

bool chr_is_alphanum(char chr) {
    return chr_is_alpha(chr) || chr_is_digit(chr);
}

bool chr_is_iden(char chr, bool is_start) {
    if (is_start) {
        return chr_is_alpha(chr) || chr == '_';
    }

    return chr_is_alphanum(chr) || chr == '_';
}

bool str_is_keyword(string str) {
    return string_equal(str, "int")
        || string_equal(str, "bool")
        || string_equal(str, "string")
        || string_equal(str, "char")
        || string_equal(str, "void")
        || string_equal(str, "struct")
        || string_equal(str, "typedef")
        || string_equal(str, "if")
        || string_equal(str, "else")
        || string_equal(str, "while")
        || string_equal(str, "for")
        || string_equal(str, "continue")
        || string_equal(str, "break")
        || string_equal(str, "return")
        || string_equal(str, "assert")
        || string_equal(str, "error")
        || string_equal(str, "alloc")
        || string_equal(str, "alloc_array");
}
